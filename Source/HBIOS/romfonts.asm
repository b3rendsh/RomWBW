;
;=============================================================================
; ROMFONTS.ASM - ROM HOSTED FONTS
;=============================================================================
;
; THIS ASSEMBLY IS PURELY A DATA ASSEMBLY USED TO INCLUDE THE ROM-HOSTED
; FONTS.
;
; FOR NOW, WE ARE JUST INCLUDING 3 FONTS AND THEY ARE NOT COMPRESSED.
; THESE THREE FONTS SHOULD ALWAYS RESULT IN AN 8K BINARY.
;
#INCLUDE "std.asm"
;
;
;
USEFONT6X8	.EQU	TRUE
USEFONT8X8	.EQU	TRUE
USEFONT8X11	.EQU	FALSE
USEFONT8X16	.EQU	TRUE
;
	.ORG	FONTS_LOC
;
; FONT LOCATION MAP
;
#IF USEFONT6X8
	.DB	FONTID_6X8
	.DW	FONT6X8
#ENDIF
;
#IF USEFONT8X8
	.DB	FONTID_8X8
	.DW	FONT8X8
#ENDIF
;
#IF USEFONT8X11
	.DB	FONTID_8X11
	.DW	FONT8X11
#ENDIF
;
#IF USEFONT8X16
	.DB	FONTID_8X16
	.DW	FONT8X16
#ENDIF
;
	.DB	0		; END OF TABLE
;
;
;
#IF USEFONT6X8
	.ECHO	"FONT6X8: "
FONT6X8:
#INCLUDE "font6x8u.asm"
	.ECHO	$ - FONT6X8
	.ECHO	" BYTES\n"
#ENDIF
;
#IF USEFONT8X8
	.ECHO	"FONT8X8: "
FONT8X8:
#INCLUDE "font8x8u.asm"
	.ECHO	$ - FONT8X8
	.ECHO	" BYTES\n"
#ENDIF
;
#IF USEFONT8X11
	.ECHO	"FONT8X11: "
FONT8X11:
#INCLUDE "font8x11u.asm"
	.ECHO	$ - FONT8X11
	.ECHO	" BYTES\n"
#ENDIF
;
#IF USEFONT8X16
	.ECHO	"FONT8X16: "
FONT8X16:
#INCLUDE "font8x16u.asm"
	.ECHO	$ - FONT8X16
	.ECHO	" BYTES\n"
#ENDIF
;
; IT IS CRITICAL THAT THE FINAL BINARY BE EXACTLY USR_SIZ BYTES.
; THIS GENERATES FILLER AS NEEDED.  IT WILL ALSO FORCE AN ASSEMBLY
; ERROR IF THE SIZE EXCEEDS THE SPACE ALLOCATED.
;
SLACK	.EQU	(FONTS_END - $)
;
#IF (SLACK < 0)
	.ECHO	"*** FONTS IS TOO BIG!!!\n"
	!!!	; FORCE AN ASSEMBLY ERROR
#ENDIF
;
	.FILL	SLACK,$00
	.ECHO	"FONTS space remaining: "
	.ECHO	SLACK
	.ECHO	" bytes.\n"
;
	.END
