Font files for ROMWBW.

	Board		Driver		Chip
	--------	--------	--------
	ECB-SCG		tms.asm		9918
	ECB-VDU		vdu.asm		6545
	ECB-CVDU	cvdu.asm	8563
	ECB-VGA3	vga.asm		6445
	MBC-VDC		cvdu.asm	8568
	MBC-VDP		tms.asm		9938/9958
	RCBUS-VRC	vrc.asm		PLD
	RCBUS-TMS	tms.asm		99x8

Name		Glyph	Cell	Size	Comp	Board & Display Mode
------------------------------------------------------------------------------------------------
font6x8		6x8	8x8	2048	1094	ECB-SCG, MBC-VDP
font8x8		6x8	8x8	2048	1259	ECB-CVDU (CGA), MBC-VDC (CGA), ECB-VGA3 (80x60)
font8x11	8x11	8x11	2816	1252	ECB-VGA3 (80x43)
font8x16	8x14	8x16	4096	1466	ECB-CVDU (EGA), MBC-VDC (EGA), ECB-VGA3 (80x24, 80x25, 80x30)
				-----	-----
				11008	5071

Notes:

- Compression of the 6x8 font is disabled because the TMS driver must
  reload the font when CP/M is warm booted.  There is no memory area
  where the decompression can safely be done at this point.

- The 856x GDPs always use 16 bytes per font character.  The CVDU
  driver inserts dummy bytes as needed to utilize the 8x8 font when
  selected.

- The 8x11 font is not typically used and only supported by one
  board.  It is probably not worth the space of storing it and will
  probably be eliminated in the future.

- All fonts are in code page 437 except 8x11.

For inclusion in HBIOS the .bin format files must be converted to assembler .asm format.
This is achieved using the fonttool utility and is completed automatically as part of the build process.
i.e. fonts files are converted to .asm format and then copied to the HBIOS directory. 

To replace a font, simply copy it to the Fonts directory using the same naming convention above, 
ensuring format and size match. Then complete a new build process.

To reduce the size of the HBIOS image, fonts can be compressed by using the USEZLSA2 equate.

Use the following in your custom configuration to turn on font compression:

USELZSA2	.SET	TRUE 

Compressed fonts are created using lzsa utility.

During the build process, fonts are compressed using the command line compressor by Emmanuel Marty
The compression is done as follows:

lzsa.exe -f2 -r <sourcefile> <outfile>

where option -f2 selects lzsa version 2 compression.
where option -r asks for the generation of raw (frame-less) data.

Original compression source code and files available here:

Latest github code:
 https://github.com/emmanuel-marty/lzsa
Implementation example (older version):
 https://cpcrulez.fr/applications_tools_cruncher_LZSA2_Z80.htm
x86 lzsa compressor application:
 http://www.pouet.net/prod.php?which=81573
